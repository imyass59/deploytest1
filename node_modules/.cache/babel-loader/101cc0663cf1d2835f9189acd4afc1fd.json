{"ast":null,"code":"import { Types } from \"../actions/types\";\nconst initialState = {\n  CartItems: []\n};\n\nconst CartItemsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.ADD_TO_CART: //const exist = state.CartItems.find((item)=> item.id === action.payload.product)\n\n    default:\n      return state;\n  }\n};\n\n_c = CartItemsReducer;\nexport default CartItemsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItemsReducer\");","map":{"version":3,"names":["Types","initialState","CartItems","CartItemsReducer","state","action","type","ADD_TO_CART"],"sources":["C:/Users/Gun$moke/Desktop/Any One/ADV/reactJs/redux-store-v1/src/redux/reducers/CartItemsReducer.js"],"sourcesContent":["import { Types } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    CartItems : []\r\n}\r\nconst CartItemsReducer = (state = initialState,action) =>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case Types.ADD_TO_CART:\r\n            //const exist = state.CartItems.find((item)=> item.id === action.payload.product)\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default CartItemsReducer;"],"mappings":"AAAA,SAASA,KAAT,QAAsB,kBAAtB;AAEA,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAG;AADK,CAArB;;AAGA,MAAMC,gBAAgB,GAAG,YACzB;EAAA,IAD0BC,KAC1B,uEADkCH,YAClC;EAAA,IAD+CI,MAC/C;;EACI,QAAOA,MAAM,CAACC,IAAd;IAEI,KAAKN,KAAK,CAACO,WAAX,CAFJ,CAGQ;;IAEJ;MACI,OAAOH,KAAP;EANR;AAQH,CAVD;;KAAMD,gB;AAYN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}