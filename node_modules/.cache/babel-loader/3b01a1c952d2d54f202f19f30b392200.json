{"ast":null,"code":"import { Types } from \"../actions/types\";\nconst local = JSON.parse(window.localStorage.getItem(\"Cart-items\"));\nconst foundData = local ? local : [];\nconst initialState = {\n  CartItems: [],\n  CountItems: 0\n};\n\nconst CartItemsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.ADD_TO_CART:\n      /*\r\n      const exist = state.CartItems.find((x)=> x.product.id === action.payload.product.id);\r\n      if(exist){\r\n          return state.CartItems.map((item)=> item.product.id === action.payload.product.id ? {...item,qty : item.qty + action.payload.qty}: item);\r\n          //state.CartItems.map((item)=> item.product.id === action.payload.product.id ? {...item,qty : item.qty + action.payload.qty} : item);\r\n      }\r\n      else{\r\n          state.CartItems.push(action.payload);\r\n          return state;\r\n      }*/\n\n      /*state.CartItems.push(action.payload);\r\n      return{\r\n          ...state\r\n      }*/\n      state.CartItems.push(action.payload); //window.localStorage.setItem(\"Cart-items\",JSON.stringify(state.CartItems))\n\n      return { ...state\n      };\n\n    case Types.REMOVE_FROM_CART:\n      return { ...state,\n        CartItems: state.CartItems.filter(item => item.product.id !== action.payload.id)\n      };\n\n    case Types.CHANGE_COUNT_CART:\n      var count = 0;\n      if (state.CartItems) state.CartItems.map(item => {\n        count += item.qty;\n      });\n      return { ...state,\n        CountItems: count\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = CartItemsReducer;\nexport default CartItemsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItemsReducer\");","map":{"version":3,"names":["Types","local","JSON","parse","window","localStorage","getItem","foundData","initialState","CartItems","CountItems","CartItemsReducer","state","action","type","ADD_TO_CART","push","payload","REMOVE_FROM_CART","filter","item","product","id","CHANGE_COUNT_CART","count","map","qty"],"sources":["C:/Users/Gun$moke/Desktop/Any One/ADV/reactJs/redux-store-v1/src/redux/reducers/CartItemsReducer.js"],"sourcesContent":["import { Types } from \"../actions/types\"\r\n\r\nconst local = JSON.parse(window.localStorage.getItem(\"Cart-items\"));\r\nconst foundData = (local)?local:[];\r\n\r\nconst initialState = {\r\n    CartItems : [],\r\n    CountItems : 0\r\n}\r\nconst CartItemsReducer = (state = initialState,action) =>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case Types.ADD_TO_CART:\r\n            /*\r\n            const exist = state.CartItems.find((x)=> x.product.id === action.payload.product.id);\r\n            if(exist){\r\n                return state.CartItems.map((item)=> item.product.id === action.payload.product.id ? {...item,qty : item.qty + action.payload.qty}: item);\r\n                //state.CartItems.map((item)=> item.product.id === action.payload.product.id ? {...item,qty : item.qty + action.payload.qty} : item);\r\n            }\r\n            else{\r\n                state.CartItems.push(action.payload);\r\n                return state;\r\n            }*/\r\n            /*state.CartItems.push(action.payload);\r\n            return{\r\n                ...state\r\n            }*/\r\n            state.CartItems.push(action.payload);\r\n            //window.localStorage.setItem(\"Cart-items\",JSON.stringify(state.CartItems))\r\n            return {\r\n                ...state\r\n            }\r\n        case Types.REMOVE_FROM_CART:\r\n            return {\r\n                ...state,\r\n                CartItems : state.CartItems.filter((item) => item.product.id !== action.payload.id)\r\n            }\r\n        case Types.CHANGE_COUNT_CART :\r\n            var count = 0;\r\n            if(state.CartItems)state.CartItems.map((item)=>\r\n            {\r\n                count +=item.qty;\r\n            });\r\n            return {\r\n                ...state,\r\n                CountItems : count\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default CartItemsReducer;"],"mappings":"AAAA,SAASA,KAAT,QAAsB,kBAAtB;AAEA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAX,CAAd;AACA,MAAMC,SAAS,GAAIN,KAAD,GAAQA,KAAR,GAAc,EAAhC;AAEA,MAAMO,YAAY,GAAG;EACjBC,SAAS,EAAG,EADK;EAEjBC,UAAU,EAAG;AAFI,CAArB;;AAIA,MAAMC,gBAAgB,GAAG,YACzB;EAAA,IAD0BC,KAC1B,uEADkCJ,YAClC;EAAA,IAD+CK,MAC/C;;EACI,QAAOA,MAAM,CAACC,IAAd;IAEI,KAAKd,KAAK,CAACe,WAAX;MACI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MACY;AACZ;AACA;AACA;MACYH,KAAK,CAACH,SAAN,CAAgBO,IAAhB,CAAqBH,MAAM,CAACI,OAA5B,EAfJ,CAgBI;;MACA,OAAO,EACH,GAAGL;MADA,CAAP;;IAGJ,KAAKZ,KAAK,CAACkB,gBAAX;MACI,OAAO,EACH,GAAGN,KADA;QAEHH,SAAS,EAAGG,KAAK,CAACH,SAAN,CAAgBU,MAAhB,CAAwBC,IAAD,IAAUA,IAAI,CAACC,OAAL,CAAaC,EAAb,KAAoBT,MAAM,CAACI,OAAP,CAAeK,EAApE;MAFT,CAAP;;IAIJ,KAAKtB,KAAK,CAACuB,iBAAX;MACI,IAAIC,KAAK,GAAG,CAAZ;MACA,IAAGZ,KAAK,CAACH,SAAT,EAAmBG,KAAK,CAACH,SAAN,CAAgBgB,GAAhB,CAAqBL,IAAD,IACvC;QACII,KAAK,IAAGJ,IAAI,CAACM,GAAb;MACH,CAHkB;MAInB,OAAO,EACH,GAAGd,KADA;QAEHF,UAAU,EAAGc;MAFV,CAAP;;IAIJ;MACI,OAAOZ,KAAP;EAtCR;AAwCH,CA1CD;;KAAMD,gB;AA4CN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}