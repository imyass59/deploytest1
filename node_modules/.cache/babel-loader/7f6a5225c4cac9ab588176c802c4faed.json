{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gun$moke\\\\Desktop\\\\Any One\\\\ADV\\\\reactJs\\\\redux-store-v1\\\\src\\\\Components\\\\PaymentIntegration\\\\PaypaleCheckOutButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { PayPalButtons } from '@paypal/react-paypal-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaypaleCheckOutButton(props) {\n  _s();\n\n  const item = props.product;\n  const [paidFor, setPaidFor] = useState(false);\n\n  const handleApprove = orderId => {\n    // Call backend function to fulfill order\n    // if response is success\n    setPaidFor(true); // Refresh user's account or subscription status\n    // if response is error\n    // alert(\"Your payment was processed successfully. However, we are unable to fulfill your purchase. Please contact us at support@designcode.io for assistance.\");\n  };\n\n  if (paidFor) {\n    // Display success message, modal or redirect user to success page\n    alert(\"Thank you for your purchase!\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          purchase_units: [{\n            description: item.product.title,\n            amount: {\n              value: item.product.price * item.qty\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        const order = await actions.order.capture();\n        console.log(\"order\", order);\n        handleApprove(data.orderID);\n      },\n      onError: err => {\n        setError(err);\n        console.error(\"PayPal Checkout onError\", err);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PaypaleCheckOutButton, \"q2m9xx3Z2/+1p/wAH6yHUDyM2cc=\");\n\n_c = PaypaleCheckOutButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaypaleCheckOutButton\");","map":{"version":3,"names":["React","PayPalButtons","PaypaleCheckOutButton","props","item","product","paidFor","setPaidFor","useState","handleApprove","orderId","alert","data","actions","order","create","purchase_units","description","title","amount","value","price","qty","capture","console","log","orderID","err","setError","error"],"sources":["C:/Users/Gun$moke/Desktop/Any One/ADV/reactJs/redux-store-v1/src/Components/PaymentIntegration/PaypaleCheckOutButton.jsx"],"sourcesContent":["import React from 'react'\r\nimport { PayPalButtons } from '@paypal/react-paypal-js'\r\n\r\nexport default function PaypaleCheckOutButton(props) {\r\n    const item = props.product;\r\n    const [paidFor, setPaidFor] = useState(false);\r\n    const handleApprove = (orderId) => {\r\n        // Call backend function to fulfill order\r\n    \r\n        // if response is success\r\n        setPaidFor(true);\r\n        // Refresh user's account or subscription status\r\n    \r\n        // if response is error\r\n        // alert(\"Your payment was processed successfully. However, we are unable to fulfill your purchase. Please contact us at support@designcode.io for assistance.\");\r\n      };\r\n    \r\n      if (paidFor) {\r\n        // Display success message, modal or redirect user to success page\r\n        alert(\"Thank you for your purchase!\");\r\n      }    \r\n  return (\r\n    <>\r\n        <PayPalButtons\r\n            createOrder={(data,actions) =>\r\n            {\r\n                return actions.order.create({\r\n                    purchase_units : [\r\n                        {\r\n                            description : item.product.title,\r\n                            amount : {\r\n                                value : item.product.price * item.qty\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n            }} \r\n\r\n            onApprove={async (data, actions) => {\r\n                const order = await actions.order.capture(); \r\n                console.log(\"order\", order);\r\n              \r\n                handleApprove(data.orderID);\r\n            }}\r\n\r\n            onError={(err) => {\r\n                setError(err);\r\n                console.error(\"PayPal Checkout onError\", err);\r\n              }}\r\n        />\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,yBAA9B;;;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;EAAA;;EACjD,MAAMC,IAAI,GAAGD,KAAK,CAACE,OAAnB;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;;EACA,MAAMC,aAAa,GAAIC,OAAD,IAAa;IAC/B;IAEA;IACAH,UAAU,CAAC,IAAD,CAAV,CAJ+B,CAK/B;IAEA;IACA;EACD,CATH;;EAWE,IAAID,OAAJ,EAAa;IACX;IACAK,KAAK,CAAC,8BAAD,CAAL;EACD;;EACL,oBACE;IAAA,uBACI,QAAC,aAAD;MACI,WAAW,EAAE,CAACC,IAAD,EAAMC,OAAN,KACb;QACI,OAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;UACxBC,cAAc,EAAG,CACb;YACIC,WAAW,EAAGb,IAAI,CAACC,OAAL,CAAaa,KAD/B;YAEIC,MAAM,EAAG;cACLC,KAAK,EAAGhB,IAAI,CAACC,OAAL,CAAagB,KAAb,GAAqBjB,IAAI,CAACkB;YAD7B;UAFb,CADa;QADO,CAArB,CAAP;MAUH,CAbL;MAeI,SAAS,EAAE,OAAOV,IAAP,EAAaC,OAAb,KAAyB;QAChC,MAAMC,KAAK,GAAG,MAAMD,OAAO,CAACC,KAAR,CAAcS,OAAd,EAApB;QACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,KAArB;QAEAL,aAAa,CAACG,IAAI,CAACc,OAAN,CAAb;MACH,CApBL;MAsBI,OAAO,EAAGC,GAAD,IAAS;QACdC,QAAQ,CAACD,GAAD,CAAR;QACAH,OAAO,CAACK,KAAR,CAAc,yBAAd,EAAyCF,GAAzC;MACD;IAzBP;MAAA;MAAA;MAAA;IAAA;EADJ,iBADF;AA+BD;;GAjDuBzB,qB;;KAAAA,qB"},"metadata":{},"sourceType":"module"}