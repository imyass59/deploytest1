{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gun$moke\\\\Desktop\\\\Any One\\\\ADV\\\\reactJs\\\\redux-store-v1\\\\src\\\\Components\\\\PaymentIntegration\\\\PaypaleCheckOutButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { PayPalButtons } from '@paypal/react-paypal-js';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaypaleCheckOutButton(props) {\n  _s();\n\n  const item = props.product;\n  const [paidFor, setPaidFor] = useState(false);\n\n  const handleApprove = orderId => {\n    // Call backend function to fulfill order\n    // if response is success\n    setPaidFor(true); // Refresh user's account or subscription status\n    // if response is error\n    // alert(\"Your payment was processed successfully. However, we are unable to fulfill your purchase. Please contact us at support@designcode.io for assistance.\");\n  };\n\n  if (paidFor) {\n    // Display success message, modal or redirect user to success page\n    console.log(\"Thank you for your purchase!\");\n  }\n\n  const [error, setError] = useState(null);\n\n  if (error) {\n    // Display error message, modal or redirect user to error page\n    console.log(error);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      style: {\n        layout: 'horizontal'\n      },\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          purchase_units: [{\n            description: item.product.title,\n            amount: {\n              value: item.product.price * item.qty\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        const order = await actions.order.capture();\n        console.log(\"order\", order);\n        handleApprove(data.orderID);\n      },\n      onError: err => {\n        setError(err);\n        console.error(\"PayPal Checkout onError\", err);\n      },\n      onClick: (data, actions) => {\n        // Validate on button click, client or server side\n        const hasAlreadyBoughtCourse = false;\n\n        if (hasAlreadyBoughtCourse) {\n          setError(\"You already bought this course. Go to your account to view your list of courses.\");\n          return actions.reject();\n        } else {\n          return actions.resolve();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PaypaleCheckOutButton, \"nImoUOteiZgAqlD19EeTXGGETTg=\");\n\n_c = PaypaleCheckOutButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaypaleCheckOutButton\");","map":{"version":3,"names":["React","PayPalButtons","useState","PaypaleCheckOutButton","props","item","product","paidFor","setPaidFor","handleApprove","orderId","console","log","error","setError","layout","data","actions","order","create","purchase_units","description","title","amount","value","price","qty","capture","orderID","err","hasAlreadyBoughtCourse","reject","resolve"],"sources":["C:/Users/Gun$moke/Desktop/Any One/ADV/reactJs/redux-store-v1/src/Components/PaymentIntegration/PaypaleCheckOutButton.jsx"],"sourcesContent":["import React from 'react'\r\nimport { PayPalButtons } from '@paypal/react-paypal-js'\r\nimport { useState } from 'react';\r\n\r\nexport default function PaypaleCheckOutButton(props) {\r\n    const item = props.product;\r\n    const [paidFor, setPaidFor] = useState(false);\r\n    const handleApprove = (orderId) => {\r\n        // Call backend function to fulfill order\r\n    \r\n        // if response is success\r\n        setPaidFor(true);\r\n        // Refresh user's account or subscription status\r\n    \r\n        // if response is error\r\n        // alert(\"Your payment was processed successfully. However, we are unable to fulfill your purchase. Please contact us at support@designcode.io for assistance.\");\r\n      };\r\n    \r\n      if (paidFor) {\r\n        // Display success message, modal or redirect user to success page\r\n        console.log(\"Thank you for your purchase!\");\r\n        }\r\n    \r\n    const [error, setError] = useState(null);\r\n\r\n    if (error) {\r\n    // Display error message, modal or redirect user to error page\r\n    console.log(error);\r\n    }    \r\n  return (\r\n    <>\r\n        <PayPalButtons \r\n         style = {{\r\n          layout: 'horizontal'\r\n      }}\r\n            createOrder={(data,actions) =>\r\n            {\r\n                return actions.order.create({\r\n                    purchase_units : [\r\n                        {\r\n                            description : item.product.title,\r\n                            amount : {\r\n                                value : item.product.price * item.qty\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n            }} \r\n\r\n            onApprove={async (data, actions) => {\r\n                const order = await actions.order.capture(); \r\n                console.log(\"order\", order);\r\n              \r\n                handleApprove(data.orderID);\r\n            }}\r\n\r\n            onError={(err) => {\r\n                setError(err);\r\n                console.error(\"PayPal Checkout onError\", err);\r\n            }}\r\n            \r\n            onClick={(data, actions) => {\r\n                // Validate on button click, client or server side\r\n                const hasAlreadyBoughtCourse = false;\r\n              \r\n                if (hasAlreadyBoughtCourse) {\r\n                  setError(\r\n                    \"You already bought this course. Go to your account to view your list of courses.\"\r\n                  );\r\n              \r\n                  return actions.reject();\r\n                } else {\r\n                  return actions.resolve();\r\n                }\r\n              }}\r\n        />\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;EAAA;;EACjD,MAAMC,IAAI,GAAGD,KAAK,CAACE,OAAnB;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;;EACA,MAAMO,aAAa,GAAIC,OAAD,IAAa;IAC/B;IAEA;IACAF,UAAU,CAAC,IAAD,CAAV,CAJ+B,CAK/B;IAEA;IACA;EACD,CATH;;EAWE,IAAID,OAAJ,EAAa;IACX;IACAI,OAAO,CAACC,GAAR,CAAY,8BAAZ;EACC;;EAEL,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;;EAEA,IAAIW,KAAJ,EAAW;IACX;IACAF,OAAO,CAACC,GAAR,CAAYC,KAAZ;EACC;;EACH,oBACE;IAAA,uBACI,QAAC,aAAD;MACC,KAAK,EAAI;QACRE,MAAM,EAAE;MADA,CADV;MAII,WAAW,EAAE,CAACC,IAAD,EAAMC,OAAN,KACb;QACI,OAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;UACxBC,cAAc,EAAG,CACb;YACIC,WAAW,EAAGhB,IAAI,CAACC,OAAL,CAAagB,KAD/B;YAEIC,MAAM,EAAG;cACLC,KAAK,EAAGnB,IAAI,CAACC,OAAL,CAAamB,KAAb,GAAqBpB,IAAI,CAACqB;YAD7B;UAFb,CADa;QADO,CAArB,CAAP;MAUH,CAhBL;MAkBI,SAAS,EAAE,OAAOV,IAAP,EAAaC,OAAb,KAAyB;QAChC,MAAMC,KAAK,GAAG,MAAMD,OAAO,CAACC,KAAR,CAAcS,OAAd,EAApB;QACAhB,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,KAArB;QAEAT,aAAa,CAACO,IAAI,CAACY,OAAN,CAAb;MACH,CAvBL;MAyBI,OAAO,EAAGC,GAAD,IAAS;QACdf,QAAQ,CAACe,GAAD,CAAR;QACAlB,OAAO,CAACE,KAAR,CAAc,yBAAd,EAAyCgB,GAAzC;MACH,CA5BL;MA8BI,OAAO,EAAE,CAACb,IAAD,EAAOC,OAAP,KAAmB;QACxB;QACA,MAAMa,sBAAsB,GAAG,KAA/B;;QAEA,IAAIA,sBAAJ,EAA4B;UAC1BhB,QAAQ,CACN,kFADM,CAAR;UAIA,OAAOG,OAAO,CAACc,MAAR,EAAP;QACD,CAND,MAMO;UACL,OAAOd,OAAO,CAACe,OAAR,EAAP;QACD;MACF;IA3CP;MAAA;MAAA;MAAA;IAAA;EADJ,iBADF;AAiDD;;GA1EuB7B,qB;;KAAAA,qB"},"metadata":{},"sourceType":"module"}