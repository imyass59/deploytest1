{"ast":null,"code":"import { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nProvider;\nconst middleware = [logger, thunk];\nconst initialState = {\n  cart: [{\n    product: {\n      \"id\": 1,\n      \"title\": \"Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops\",\n      \"price\": 109.95,\n      \"description\": \"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\",\n      \"category\": \"men's clothing\",\n      \"image\": \"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"\n    },\n    quanrity: 0\n  }]\n};\n\nconst reducers = state => {\n  return state;\n};\n\nconst store = createStore(reducers, applyMiddleware(...middleware));\nexport default store;","map":{"version":3,"names":["Provider","createStore","applyMiddleware","logger","thunk","middleware","initialState","cart","product","quanrity","reducers","state","store"],"sources":["C:/Users/Gun$moke/Desktop/Any One/ADV/reactJs/redux-store-v1/src/redux/store/store.js"],"sourcesContent":["import { Provider } from 'react-redux';\r\nimport {createStore,applyMiddleware} from 'redux';\r\nimport {logger} from 'redux-logger'\r\nimport thunk from 'redux-thunk';\r\nProvider\r\n\r\nconst middleware = [logger,thunk]\r\n\r\nconst initialState = {\r\n    cart : [\r\n        {\r\n            product :\r\n            {\r\n                \"id\": 1,\r\n                \"title\": \"Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops\",\r\n                \"price\": 109.95,\r\n                \"description\": \"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\",\r\n                \"category\": \"men's clothing\",\r\n                \"image\": \"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"\r\n            },\r\n            quanrity : 0\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nconst reducers = (state) =>\r\n{\r\n    return state;\r\n}\r\n\r\nconst store = createStore(reducers,applyMiddleware(...middleware))\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAAQC,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACAJ,QAAQ;AAER,MAAMK,UAAU,GAAG,CAACF,MAAD,EAAQC,KAAR,CAAnB;AAEA,MAAME,YAAY,GAAG;EACjBC,IAAI,EAAG,CACH;IACIC,OAAO,EACP;MACI,MAAM,CADV;MAEI,SAAS,uDAFb;MAGI,SAAS,MAHb;MAII,eAAe,qIAJnB;MAKI,YAAY,gBALhB;MAMI,SAAS;IANb,CAFJ;IAUIC,QAAQ,EAAG;EAVf,CADG;AADU,CAArB;;AAkBA,MAAMC,QAAQ,GAAIC,KAAD,IACjB;EACI,OAAOA,KAAP;AACH,CAHD;;AAKA,MAAMC,KAAK,GAAGX,WAAW,CAACS,QAAD,EAAUR,eAAe,CAAC,GAAGG,UAAJ,CAAzB,CAAzB;AAEA,eAAeO,KAAf"},"metadata":{},"sourceType":"module"}